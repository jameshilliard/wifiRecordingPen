int echocloud_cedarx_rec_create_exec(rec_dev dev, char *cmd, void *arg)
{

    XRECODER_AUDIO_ENCODE_TYPE type;
    if(dev == rec_dev_tf)
    {
        if (strstr(cmd, ".amr"))
            type = XRECODER_AUDIO_ENCODE_AMR_TYPE;
        else if (strstr(cmd, ".pcm"))
            type = XRECODER_AUDIO_ENCODE_PCM_TYPE;
        else
        {
            YUHENG_ERR("do not support this encode type\n");
            return -1;
        }

    }
    else
    {
        type = XRECODER_AUDIO_ENCODE_AMR_TYPE;
    }



    if (xrecord_inited == 0)
    {
        AwMuxerInit();
        xrecord_inited = 1;
    }

    xrecord = XRecordCreate();
    if (xrecord == NULL)
    {
        YUHENG_ERR("create fail\n");
        return -1;

    }


    CaptureCtrl *cap = CaptureDeviceCreate();
    if (!cap)
    {
        YUHENG_DBG("cap device create failed\n");
    }

    
    XRecordSetAudioCap(xrecord, cap);
	XRecordConfig audioConfig;
    audioConfig.nBitrate = 12200;
    audioConfig.nChan = 1;
    audioConfig.nSamplerate = 8000;
    audioConfig.nSamplerBits = 16;

    XRecordSetDataDstUrl(xrecord, cmd, arg, NULL);
    XRecordSetAudioEncodeType(xrecord, type, &audioConfig);

    XRecordPrepare(xrecord);
    XRecordStart(xrecord);
    YUHENG_DBG("record start\n");


    return 0;
}

int echocloud_cedarx_rec_destory_exec(void)
{
    if(xrecord)
    {
        XRecordStop(xrecord);
        YUHENG_DBG("record stop\n");
        XRecordDestroy(xrecord);
        YUHENG_DBG("record destroy\n");
        xrecord = NULL;
    }
    return 0;
}
ธาว้ 2018-09-13 15:02:27
static uint32_t httpc_record_callback(void*buf,uint32_t size)
{
	uint32_t write_len;
	write_len = aligenie_fifo_put(p_aligenie_fifo,buf,size);
	printf("size:%x,writelen:%x\n",size,write_len);
#if 0
	if(write_len != size)
	{
	   YUHENG_ERR("putlen = %x\n",write_len);
	   os_taskq_post_msg(TASK_ID_MAIN_TASK,1,MSG_WECHAT_MODE_END);
	}
#endif
	return size;
}


static int httpc_record_stat = 0;
static int httpc_record_start_exec(void)
{
	if(echocloud_cedarx_rec_create_exec(rec_dev_ram,"callback://",httpc_record_callback) == 0)//
	{
		YUHENG_DBG("REC START succ\n");
		httpc_record_stat = 1;
		return 0;
	}
	else
	{
		YUHENG_DBG("REC START fail\n");
		return -1;
	}
}


static int httpc_record_stop_exec(void)
{
	echocloud_cedarx_rec_destory_exec();
	OS_MSleep(5);
	httpc_record_stat = 0;
	return 0;
}